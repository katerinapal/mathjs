'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('pickRandom', function () {
  // Note: pickRandom is a convenience function generated by distribution
  // it is tested in distribution.test.js

  it('should have a function pickRandom', function () {
    _assert2.default.equal(_typeof(math.pickRandom), 'function');
  });

  it('should LaTeX pickRandom', function () {
    var expression = math.parse('pickRandom([1,2,3])');
    _assert2.default.equal(expression.toTex(), '\\mathrm{pickRandom}\\left(\\begin{bmatrix}1\\\\2\\\\3\\\\\\end{bmatrix}\\right)');
  });
});
